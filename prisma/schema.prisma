// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @default(now()) @updatedAt @map(name: "updated_at")
  name      String    @unique
  email     String    @unique
  Session   Session[]

  @@map(name: "users")
}

model Mouse {
  id        String   @id @default(cuid()) // create cuid if no id is provided
  createdAt DateTime @default(now()) @map(name: "created_at") // set automatically
  updatedAt DateTime @default(now()) @updatedAt @map(name: "updated_at") // set automatically

  pyratId     String    @map(name: "pyrat_id")
  chipId      Int       @map(name: "chip_number")
  gender      String
  deceasedAt  DateTime? @map(name: "deceasedd_at")
  groupNumber Int       @default(0) @map(name: "group_number")

  genoType String?
  Run      Run[]
}

model Run {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @updatedAt @map(name: "updated_at")

  mouse   Mouse  @relation(fields: [mouseId], references: [id])
  mouseId String @map(name: "mouse_id")

  rs0 Int?
  rs1 Int?
  rs2 Int?
  rs3 Int?
  rs4 Int?
  rs5 Int?
  rs6 Int?
  rs7 Int?
  rs8 Int?

  ls0 Int?
  ls1 Int?
  ls2 Int?
  ls3 Int?
  ls4 Int?
  ls5 Int?
  ls6 Int?
  ls7 Int?
  ls8 Int?

  Session   Session? @relation(fields: [sessionId], references: [id])
  sessionId String?  @map(name: "session_id")
}

model Session {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @updatedAt @map(name: "updated_at")

  author   User   @relation(fields: [authorId], references: [id])
  authorId String @map(name: "author_id")

  runs         Run[]
  experiment   Experiment? @relation(fields: [experimentId], references: [id])
  experimentId String?     @map(name: "experiment_id")
}

model Experiment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @updatedAt @map(name: "updated_at")

  name     String
  closedAt DateTime? @map(name: "closed_at")

  sessions Session[]
}
